{"version":3,"file":"carousel.js","sources":["webpack:///./themes/mcg/assets/src/js/main/carousel/Carousel.ts","webpack:///./themes/mcg/assets/src/js/main/carousel/Flickpity.ts"],"sourcesContent":["// @ts-nocheck\nimport { get, getAll } from \"@/utils\";\nimport Flickpity from \"./Flickpity\";\n\nclass Carousel {\n    element: HTMLElement;\n    parent: HTMLElement;\n    _videosUpdated = false as boolean;\n\n    constructor(element) {\n        this.element = element;\n        this.parent = element.parentElement;\n\n        this.createCarousel();\n        this.carouselArrows();\n        this.carouselPager();\n    }\n\n    createCarousel() {\n        const settings = this.element.getAttribute(\"data-settings\") || \"\";\n\n        this.carousel = new Flickpity(this.element, {\n            autoPlay: settings.includes(\"autoPlay\") ? 4000 : false,\n            cellAlign: \"left\",\n            pageDots: false,\n            prevNextButtons: false,\n            setGallerySize: settings.includes(\"setGallerySize\"),\n            adaptiveHeight: settings.includes(\"adaptiveHeight\"),\n            watchCSS: settings.includes(\"watchCss\"),\n            wrapAround: true,\n            on: {\n                ready: () => {\n                    this.element.classList.add(\"flickity-ready\");\n                },\n                deactivate() {\n                    this.element.classList.remove(\"flickity-ready\");\n                },\n            },\n        });\n    }\n\n    carouselArrows() {\n        const arrows = getAll(\".js-carousel-arrow\", this.parent);\n        if (arrows.length === 0) return;\n\n        arrows.forEach((arrow) => {\n            const direction = arrow.getAttribute(\"data-direction\");\n            arrow.addEventListener(\"click\", () => {\n                direction === \"next\" ? this.carousel.next() : this.carousel.previous();\n            });\n        });\n    }\n\n    async carouselPager() {\n        const pagerEl = get(\".js-carousel-pager\", this.parent);\n        if (!pagerEl) return;\n\n        const { default: Pager } = await import(/* webpackChunkName: \"carousel-pager\" */ \"./Pager\");\n\n        new Pager(pagerEl, this.carousel);\n    }\n}\nexport default Carousel;","// @ts-nocheck\nimport Flickity from \"flickity\";\n\n/**\n * This class extends Flickity prototype.\n */\n\nconst { resize } = Flickity.prototype;\n\nclass Flickpity extends Flickity {\n    /**\n     * Here we extend flickity resize method that we remove `flickity-ready` class\n     * before `resize` function is executed and adds it after. It allows Flickity to correctly\n     * calculate height of each slide when we have set `height: 100%` on them.\n     */\n    resize() {\n        if (this.isActive) {\n            this.element!.classList.remove(\"flickity-ready\");\n\n            resize.call(this);\n\n            this.element!.classList.add(\"flickity-ready\");\n        }\n    }\n}\n\nexport default Flickpity;\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAPA;AATA;AAkBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAzDA;AACA;AAyDA;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAfA;AACA;AAgBA;;;;A","sourceRoot":""}