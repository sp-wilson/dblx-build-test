{"version":3,"file":"Vimeo.js","sources":["webpack:///./themes/mcg/assets/src/js/main/video/Video.ts","webpack:///./themes/mcg/assets/src/js/main/video/types/Vimeo.ts"],"sourcesContent":["import { get } from \"@/utils\";\nimport { observe } from \"../../utils/observer\";\nimport type { VimeoPlayer } from \"./types/Vimeo\";\nimport type { YtPlayer } from \"./types/YouTube\";\n\ntype VideoPlayer = VimeoPlayer | YtPlayer;\n\ntype Task = \"play\" | \"pause\";\n\n/**\n * This is video base class.\n */\nabstract class Video {\n    element: HTMLElement;\n    container: HTMLElement;\n    id: string;\n    isPlaying: boolean;\n    isReady: boolean;\n    queue: Set<Task>;\n    abstract player: VideoPlayer;\n    playPromise?: Promise<any>;\n\n    constructor(element: HTMLElement) {\n        this.element = element;\n        this.container = get(\".js-video-container\", element)!;\n        this.id = element.getAttribute(\"data-id\") || \"\";\n        this.isPlaying = false;\n        this.isReady = false;\n        this.queue = new Set();\n\n        this.createPlayer();\n\n        this._observeElement();\n        element.dispatchEvent(new CustomEvent(\"videoloaded\"));\n    }\n\n    abstract createPlayer(): void;\n    abstract playVideo(): void;\n    abstract pauseVideo(): void;\n\n    play() {\n        if (this.isPlaying) return;\n        if (!this.isReady) {\n            this.createPlayer();\n            this._queueTask(\"play\");\n            return;\n        }\n\n        this.playPromise = Promise.resolve(this.playVideo());\n    }\n\n    async pause() {\n        if (!this.isPlaying) return;\n        if (!this.isReady || typeof this.playPromise === \"undefined\") {\n            this._queueTask(\"pause\");\n            return;\n        }\n\n        await this.playPromise;\n        this.pauseVideo();\n        this.onStop();\n    }\n\n    onEnded() {\n        this.onStop();\n    }\n\n    onPlay() {\n        this.element.setAttribute(\"data-status\", \"loaded playing\");\n        this.isPlaying = true;\n    }\n\n    onStop() {\n        this.element.setAttribute(\"data-status\", \"loaded paused\");\n        this.isPlaying = false;\n    }\n\n    watchResize(videoWidth: number, videoHeight: number) {\n        const aspectRatio = videoHeight / videoWidth;\n\n        const updateSize = () => {\n            const containerWidth = this.element.clientWidth;\n            this.container!.style.width = `${containerWidth}px`;\n            this.container!.style.height = `${containerWidth * aspectRatio}px`;\n        };\n\n        updateSize();\n        this.element.dispatchEvent(new CustomEvent(\"videosize\"));\n        window.dispatchEvent(new CustomEvent(\"resize\"));\n        window.addEventListener(\"resize\", () => updateSize());\n\n        this.player.element!.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    flushQueue() {\n        this.queue.forEach((command) => this[command]());\n        this.queue.clear();\n    }\n\n    private _queueTask(command: Task) {\n        this.queue.add(command);\n    }\n\n    private _observeElement() {\n        observe(\n            this.container,\n            (inView) => {\n                if (inView) {\n                    this.play();\n                } else if (this.isReady) {\n                    this.pause();\n                }\n            },\n            {\n                threshold: 0.25,\n                rootMargin: \"-50px\",\n            }\n        );\n    }\n}\n\nexport default Video;\n","import Player from \"@vimeo/player\";\nimport { addPrefetch, device } from \"@/utils\";\nimport Video from \"../Video\";\n\nexport interface VimeoPlayer extends Player {\n    element?: HTMLIFrameElement;\n}\n\nclass VimeoVideo extends Video {\n    firstBuffer = true as boolean;\n    player!: VimeoPlayer;\n    static preconnected?: boolean;\n\n    createPlayer() {\n        if (this.player) return;\n        VimeoVideo._warmConnections();\n\n        // Check if private video has two part id\n        const url = this.container.getAttribute(\"data-url\") || undefined;\n\n        this.player = new Player(this.container, {\n            background: true,\n            byline: false,\n            color: \"ffffff\",\n            id: +this.id,\n            url,\n            loop: true,\n            muted: true,\n            portrait: false,\n            title: false,\n        });\n\n        this.player.on(\"ended\", () => this.onEnded());\n        this.player.on(\"loaded\", () => this._onReady());\n        this.player.on(\"pause\", () => this.pause());\n        this.player.on(\"play\", () => this.onPlay());\n        if (device.isIOS)\n            this.player.on(\"bufferend\", () => {\n                if (this.firstBuffer) {\n                    this.firstBuffer = false;\n                    this.onPlay();\n                }\n            });\n    }\n\n    playVideo() {\n        this.player.play();\n    }\n\n    pauseVideo() {\n        this.player.pause();\n    }\n\n    private async _onReady() {\n        this.isReady = true;\n\n        const [width, height] = await Promise.all([\n            this.player.getVideoWidth(),\n            this.player.getVideoHeight(),\n        ]);\n        this.watchResize(width, height);\n\n        \"requestIdleCallback\" in window\n            ? // @ts-ignore\n              requestIdleCallback(() => this.flushQueue())\n            : this.flushQueue();\n    }\n\n    private static _warmConnections() {\n        if (VimeoVideo.preconnected) return;\n\n        // The iframe document and most of its subresources come right off player.vimeo.com\n        addPrefetch(\"preconnect\", \"https://player.vimeo.com\");\n        // Images\n        addPrefetch(\"preconnect\", \"https://i.vimeocdn.com\");\n        // Files .js, .css\n        addPrefetch(\"preconnect\", \"https://f.vimeocdn.com\");\n        // Metrics\n        addPrefetch(\"preconnect\", \"https://fresnel.vimeocdn.com\");\n\n        VimeoVideo.preconnected = true;\n    }\n}\n\nexport default VimeoVideo;\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AAUA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AA3GA;AACA;AA4GA;;;;;;;;;;;;;;;;;;ACzHA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA1EA;AACA;AADA;AACA;AA2EA;;;;A","sourceRoot":""}